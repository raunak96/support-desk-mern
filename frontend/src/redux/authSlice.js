import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

const initialState = {
	user: null,
	isError: false,
	isSuccess: false,
	isLoading: false,
	message: "",
};

/**
 * createAsyncThunk is used to perform async logic and connects it to extraReducers where its diff states like pending,
 * fulfilled can be retrieved
 * @param 1st param is just a name of action can be anything
 * @param async function
 * the user param is user data that will come from our form
 */
export const registerUser = createAsyncThunk(
	"auth/register",
	async (user, thunkAPI) => {
		console.log(user);
	}
);

export const loginUser = createAsyncThunk(
	"auth/login",
	async (user, thunkAPI) => {
		console.log(user);
	}
);

export const authSlice = createSlice({
	name: "auth",
	initialState,
	reducers: {},

	/**
	 * @desc The `extraReducers` field lets the slice handle actions defined elsewhere,
	 * including actions generated by createAsyncThunk i.e async actions like in our queries from db
	 *  or in other slices.
	 * @param builder - provides different cases for our async fn like state pending or data fetch successful
	 */
	extraReducers: builder => {},
});

export default authSlice.reducer;
